// Code generated by protoc-gen-go. DO NOT EDIT.
// source: NetMessages/Control.proto

package NetMessages

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NetPacketType int32

const (
	NetPacket_PING             NetPacketType = 0
	NetPacket_PONG             NetPacketType = 1
	NetPacket_FINDNEIGHBOURREQ NetPacketType = 2
	NetPacket_NEIGHBOUR        NetPacketType = 3
	NetPacket_SYNCREQ          NetPacketType = 4
	NetPacket_SYNCACK          NetPacketType = 5
	NetPacket_SYNCSTART        NetPacketType = 6
	NetPacket_SYNCDONE         NetPacketType = 7
)

var NetPacketType_name = map[int32]string{
	0: "PING",
	1: "PONG",
	2: "FINDNEIGHBOURREQ",
	3: "NEIGHBOUR",
	4: "SYNCREQ",
	5: "SYNCACK",
	6: "SYNCSTART",
	7: "SYNCDONE",
}

var NetPacketType_value = map[string]int32{
	"PING":             0,
	"PONG":             1,
	"FINDNEIGHBOURREQ": 2,
	"NEIGHBOUR":        3,
	"SYNCREQ":          4,
	"SYNCACK":          5,
	"SYNCSTART":        6,
	"SYNCDONE":         7,
}

func (x NetPacketType) String() string {
	return proto.EnumName(NetPacketType_name, int32(x))
}

func (NetPacketType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{0, 0}
}

type NetPacket struct {
	PacketType NetPacketType        `protobuf:"varint,1,opt,name=packet_type,json=packetType,proto3,enum=NetMessages.NetPacketType" json:"packet_type,omitempty"`
	Timestamp  *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Version    []byte               `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Id         []byte               `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
	Gossip     bool                 `protobuf:"varint,9,opt,name=gossip,proto3" json:"gossip,omitempty"`
	NodeId     []byte               `protobuf:"bytes,10,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodePubKey []byte               `protobuf:"bytes,11,opt,name=node_pub_key,json=nodePubKey,proto3" json:"node_pub_key,omitempty"`
	Sign       []byte               `protobuf:"bytes,12,opt,name=sign,proto3" json:"sign,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*NetPacket_PingData
	//	*NetPacket_PongData
	//	*NetPacket_FindNeighbourReqData
	//	*NetPacket_NeighbourData
	//	*NetPacket_SyncReqData
	//	*NetPacket_SyncAckData
	//	*NetPacket_SyncStartData
	//	*NetPacket_SyncDoneData
	Data                 isNetPacket_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *NetPacket) Reset()         { *m = NetPacket{} }
func (m *NetPacket) String() string { return proto.CompactTextString(m) }
func (*NetPacket) ProtoMessage()    {}
func (*NetPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{0}
}

func (m *NetPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetPacket.Unmarshal(m, b)
}
func (m *NetPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetPacket.Marshal(b, m, deterministic)
}
func (m *NetPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetPacket.Merge(m, src)
}
func (m *NetPacket) XXX_Size() int {
	return xxx_messageInfo_NetPacket.Size(m)
}
func (m *NetPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_NetPacket.DiscardUnknown(m)
}

var xxx_messageInfo_NetPacket proto.InternalMessageInfo

func (m *NetPacket) GetPacketType() NetPacketType {
	if m != nil {
		return m.PacketType
	}
	return NetPacket_PING
}

func (m *NetPacket) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *NetPacket) GetVersion() []byte {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *NetPacket) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *NetPacket) GetGossip() bool {
	if m != nil {
		return m.Gossip
	}
	return false
}

func (m *NetPacket) GetNodeId() []byte {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *NetPacket) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *NetPacket) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

type isNetPacket_Data interface {
	isNetPacket_Data()
}

type NetPacket_PingData struct {
	PingData *Ping `protobuf:"bytes,4,opt,name=ping_data,json=pingData,proto3,oneof"`
}

type NetPacket_PongData struct {
	PongData *Pong `protobuf:"bytes,5,opt,name=pong_data,json=pongData,proto3,oneof"`
}

type NetPacket_FindNeighbourReqData struct {
	FindNeighbourReqData *FindNeighbourReq `protobuf:"bytes,6,opt,name=find_neighbour_req_data,json=findNeighbourReqData,proto3,oneof"`
}

type NetPacket_NeighbourData struct {
	NeighbourData *Neighbours `protobuf:"bytes,7,opt,name=neighbour_data,json=neighbourData,proto3,oneof"`
}

type NetPacket_SyncReqData struct {
	SyncReqData *SyncReq `protobuf:"bytes,13,opt,name=sync_req_data,json=syncReqData,proto3,oneof"`
}

type NetPacket_SyncAckData struct {
	SyncAckData *SyncAck `protobuf:"bytes,14,opt,name=sync_ack_data,json=syncAckData,proto3,oneof"`
}

type NetPacket_SyncStartData struct {
	SyncStartData *SyncStart `protobuf:"bytes,15,opt,name=sync_start_data,json=syncStartData,proto3,oneof"`
}

type NetPacket_SyncDoneData struct {
	SyncDoneData *SyncDone `protobuf:"bytes,16,opt,name=sync_done_data,json=syncDoneData,proto3,oneof"`
}

func (*NetPacket_PingData) isNetPacket_Data() {}

func (*NetPacket_PongData) isNetPacket_Data() {}

func (*NetPacket_FindNeighbourReqData) isNetPacket_Data() {}

func (*NetPacket_NeighbourData) isNetPacket_Data() {}

func (*NetPacket_SyncReqData) isNetPacket_Data() {}

func (*NetPacket_SyncAckData) isNetPacket_Data() {}

func (*NetPacket_SyncStartData) isNetPacket_Data() {}

func (*NetPacket_SyncDoneData) isNetPacket_Data() {}

func (m *NetPacket) GetData() isNetPacket_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *NetPacket) GetPingData() *Ping {
	if x, ok := m.GetData().(*NetPacket_PingData); ok {
		return x.PingData
	}
	return nil
}

func (m *NetPacket) GetPongData() *Pong {
	if x, ok := m.GetData().(*NetPacket_PongData); ok {
		return x.PongData
	}
	return nil
}

func (m *NetPacket) GetFindNeighbourReqData() *FindNeighbourReq {
	if x, ok := m.GetData().(*NetPacket_FindNeighbourReqData); ok {
		return x.FindNeighbourReqData
	}
	return nil
}

func (m *NetPacket) GetNeighbourData() *Neighbours {
	if x, ok := m.GetData().(*NetPacket_NeighbourData); ok {
		return x.NeighbourData
	}
	return nil
}

func (m *NetPacket) GetSyncReqData() *SyncReq {
	if x, ok := m.GetData().(*NetPacket_SyncReqData); ok {
		return x.SyncReqData
	}
	return nil
}

func (m *NetPacket) GetSyncAckData() *SyncAck {
	if x, ok := m.GetData().(*NetPacket_SyncAckData); ok {
		return x.SyncAckData
	}
	return nil
}

func (m *NetPacket) GetSyncStartData() *SyncStart {
	if x, ok := m.GetData().(*NetPacket_SyncStartData); ok {
		return x.SyncStartData
	}
	return nil
}

func (m *NetPacket) GetSyncDoneData() *SyncDone {
	if x, ok := m.GetData().(*NetPacket_SyncDoneData); ok {
		return x.SyncDoneData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*NetPacket) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _NetPacket_OneofMarshaler, _NetPacket_OneofUnmarshaler, _NetPacket_OneofSizer, []interface{}{
		(*NetPacket_PingData)(nil),
		(*NetPacket_PongData)(nil),
		(*NetPacket_FindNeighbourReqData)(nil),
		(*NetPacket_NeighbourData)(nil),
		(*NetPacket_SyncReqData)(nil),
		(*NetPacket_SyncAckData)(nil),
		(*NetPacket_SyncStartData)(nil),
		(*NetPacket_SyncDoneData)(nil),
	}
}

func _NetPacket_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*NetPacket)
	// data
	switch x := m.Data.(type) {
	case *NetPacket_PingData:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PingData); err != nil {
			return err
		}
	case *NetPacket_PongData:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.PongData); err != nil {
			return err
		}
	case *NetPacket_FindNeighbourReqData:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.FindNeighbourReqData); err != nil {
			return err
		}
	case *NetPacket_NeighbourData:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.NeighbourData); err != nil {
			return err
		}
	case *NetPacket_SyncReqData:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SyncReqData); err != nil {
			return err
		}
	case *NetPacket_SyncAckData:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SyncAckData); err != nil {
			return err
		}
	case *NetPacket_SyncStartData:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SyncStartData); err != nil {
			return err
		}
	case *NetPacket_SyncDoneData:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SyncDoneData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("NetPacket.Data has unexpected type %T", x)
	}
	return nil
}

func _NetPacket_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*NetPacket)
	switch tag {
	case 4: // data.ping_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Ping)
		err := b.DecodeMessage(msg)
		m.Data = &NetPacket_PingData{msg}
		return true, err
	case 5: // data.pong_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Pong)
		err := b.DecodeMessage(msg)
		m.Data = &NetPacket_PongData{msg}
		return true, err
	case 6: // data.find_neighbour_req_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(FindNeighbourReq)
		err := b.DecodeMessage(msg)
		m.Data = &NetPacket_FindNeighbourReqData{msg}
		return true, err
	case 7: // data.neighbour_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Neighbours)
		err := b.DecodeMessage(msg)
		m.Data = &NetPacket_NeighbourData{msg}
		return true, err
	case 13: // data.sync_req_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SyncReq)
		err := b.DecodeMessage(msg)
		m.Data = &NetPacket_SyncReqData{msg}
		return true, err
	case 14: // data.sync_ack_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SyncAck)
		err := b.DecodeMessage(msg)
		m.Data = &NetPacket_SyncAckData{msg}
		return true, err
	case 15: // data.sync_start_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SyncStart)
		err := b.DecodeMessage(msg)
		m.Data = &NetPacket_SyncStartData{msg}
		return true, err
	case 16: // data.sync_done_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SyncDone)
		err := b.DecodeMessage(msg)
		m.Data = &NetPacket_SyncDoneData{msg}
		return true, err
	default:
		return false, nil
	}
}

func _NetPacket_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*NetPacket)
	// data
	switch x := m.Data.(type) {
	case *NetPacket_PingData:
		s := proto.Size(x.PingData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NetPacket_PongData:
		s := proto.Size(x.PongData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NetPacket_FindNeighbourReqData:
		s := proto.Size(x.FindNeighbourReqData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NetPacket_NeighbourData:
		s := proto.Size(x.NeighbourData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NetPacket_SyncReqData:
		s := proto.Size(x.SyncReqData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NetPacket_SyncAckData:
		s := proto.Size(x.SyncAckData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NetPacket_SyncStartData:
		s := proto.Size(x.SyncStartData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *NetPacket_SyncDoneData:
		s := proto.Size(x.SyncDoneData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Ping struct {
	To                   []byte   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{1}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

type Pong struct {
	To                   []byte   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	ReplyTok             []byte   `protobuf:"bytes,2,opt,name=reply_tok,json=replyTok,proto3" json:"reply_tok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{2}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetTo() []byte {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Pong) GetReplyTok() []byte {
	if m != nil {
		return m.ReplyTok
	}
	return nil
}

type FindNeighbourReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNeighbourReq) Reset()         { *m = FindNeighbourReq{} }
func (m *FindNeighbourReq) String() string { return proto.CompactTextString(m) }
func (*FindNeighbourReq) ProtoMessage()    {}
func (*FindNeighbourReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{3}
}

func (m *FindNeighbourReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNeighbourReq.Unmarshal(m, b)
}
func (m *FindNeighbourReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNeighbourReq.Marshal(b, m, deterministic)
}
func (m *FindNeighbourReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNeighbourReq.Merge(m, src)
}
func (m *FindNeighbourReq) XXX_Size() int {
	return xxx_messageInfo_FindNeighbourReq.Size(m)
}
func (m *FindNeighbourReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNeighbourReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindNeighbourReq proto.InternalMessageInfo

type Neighbours struct {
	Nodes                []*Node  `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Neighbours) Reset()         { *m = Neighbours{} }
func (m *Neighbours) String() string { return proto.CompactTextString(m) }
func (*Neighbours) ProtoMessage()    {}
func (*Neighbours) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{4}
}

func (m *Neighbours) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Neighbours.Unmarshal(m, b)
}
func (m *Neighbours) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Neighbours.Marshal(b, m, deterministic)
}
func (m *Neighbours) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Neighbours.Merge(m, src)
}
func (m *Neighbours) XXX_Size() int {
	return xxx_messageInfo_Neighbours.Size(m)
}
func (m *Neighbours) XXX_DiscardUnknown() {
	xxx_messageInfo_Neighbours.DiscardUnknown(m)
}

var xxx_messageInfo_Neighbours proto.InternalMessageInfo

func (m *Neighbours) GetNodes() []*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type Node struct {
	Node                 []byte   `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{5}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetNode() []byte {
	if m != nil {
		return m.Node
	}
	return nil
}

// we don't consider blocks with diff genesis block
type SyncReq struct {
	BcGenesisHash        []byte   `protobuf:"bytes,1,opt,name=bc_genesis_hash,json=bcGenesisHash,proto3" json:"bc_genesis_hash,omitempty"`
	TGenesisHash         []byte   `protobuf:"bytes,2,opt,name=t_genesis_hash,json=tGenesisHash,proto3" json:"t_genesis_hash,omitempty"`
	TGenesis2Hash        []byte   `protobuf:"bytes,3,opt,name=t_genesis2_hash,json=tGenesis2Hash,proto3" json:"t_genesis2_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncReq) Reset()         { *m = SyncReq{} }
func (m *SyncReq) String() string { return proto.CompactTextString(m) }
func (*SyncReq) ProtoMessage()    {}
func (*SyncReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{6}
}

func (m *SyncReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncReq.Unmarshal(m, b)
}
func (m *SyncReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncReq.Marshal(b, m, deterministic)
}
func (m *SyncReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncReq.Merge(m, src)
}
func (m *SyncReq) XXX_Size() int {
	return xxx_messageInfo_SyncReq.Size(m)
}
func (m *SyncReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncReq.DiscardUnknown(m)
}

var xxx_messageInfo_SyncReq proto.InternalMessageInfo

func (m *SyncReq) GetBcGenesisHash() []byte {
	if m != nil {
		return m.BcGenesisHash
	}
	return nil
}

func (m *SyncReq) GetTGenesisHash() []byte {
	if m != nil {
		return m.TGenesisHash
	}
	return nil
}

func (m *SyncReq) GetTGenesis2Hash() []byte {
	if m != nil {
		return m.TGenesis2Hash
	}
	return nil
}

type SyncAck struct {
	CurrentBlockHash     []byte   `protobuf:"bytes,2,opt,name=current_block_hash,json=currentBlockHash,proto3" json:"current_block_hash,omitempty"`
	CurrentBlockHeight   uint64   `protobuf:"varint,3,opt,name=current_block_height,json=currentBlockHeight,proto3" json:"current_block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncAck) Reset()         { *m = SyncAck{} }
func (m *SyncAck) String() string { return proto.CompactTextString(m) }
func (*SyncAck) ProtoMessage()    {}
func (*SyncAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{7}
}

func (m *SyncAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncAck.Unmarshal(m, b)
}
func (m *SyncAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncAck.Marshal(b, m, deterministic)
}
func (m *SyncAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncAck.Merge(m, src)
}
func (m *SyncAck) XXX_Size() int {
	return xxx_messageInfo_SyncAck.Size(m)
}
func (m *SyncAck) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncAck.DiscardUnknown(m)
}

var xxx_messageInfo_SyncAck proto.InternalMessageInfo

func (m *SyncAck) GetCurrentBlockHash() []byte {
	if m != nil {
		return m.CurrentBlockHash
	}
	return nil
}

func (m *SyncAck) GetCurrentBlockHeight() uint64 {
	if m != nil {
		return m.CurrentBlockHeight
	}
	return 0
}

type SyncStart struct {
	CurrentBlockHash     []byte   `protobuf:"bytes,2,opt,name=current_block_hash,json=currentBlockHash,proto3" json:"current_block_hash,omitempty"`
	CurrentBlockHeight   uint64   `protobuf:"varint,3,opt,name=current_block_height,json=currentBlockHeight,proto3" json:"current_block_height,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncStart) Reset()         { *m = SyncStart{} }
func (m *SyncStart) String() string { return proto.CompactTextString(m) }
func (*SyncStart) ProtoMessage()    {}
func (*SyncStart) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{8}
}

func (m *SyncStart) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncStart.Unmarshal(m, b)
}
func (m *SyncStart) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncStart.Marshal(b, m, deterministic)
}
func (m *SyncStart) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncStart.Merge(m, src)
}
func (m *SyncStart) XXX_Size() int {
	return xxx_messageInfo_SyncStart.Size(m)
}
func (m *SyncStart) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncStart.DiscardUnknown(m)
}

var xxx_messageInfo_SyncStart proto.InternalMessageInfo

func (m *SyncStart) GetCurrentBlockHash() []byte {
	if m != nil {
		return m.CurrentBlockHash
	}
	return nil
}

func (m *SyncStart) GetCurrentBlockHeight() uint64 {
	if m != nil {
		return m.CurrentBlockHeight
	}
	return 0
}

type SyncDone struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncDone) Reset()         { *m = SyncDone{} }
func (m *SyncDone) String() string { return proto.CompactTextString(m) }
func (*SyncDone) ProtoMessage()    {}
func (*SyncDone) Descriptor() ([]byte, []int) {
	return fileDescriptor_74ad738315f2b2f5, []int{9}
}

func (m *SyncDone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncDone.Unmarshal(m, b)
}
func (m *SyncDone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncDone.Marshal(b, m, deterministic)
}
func (m *SyncDone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncDone.Merge(m, src)
}
func (m *SyncDone) XXX_Size() int {
	return xxx_messageInfo_SyncDone.Size(m)
}
func (m *SyncDone) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncDone.DiscardUnknown(m)
}

var xxx_messageInfo_SyncDone proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("NetMessages.NetPacketType", NetPacketType_name, NetPacketType_value)
	proto.RegisterType((*NetPacket)(nil), "NetMessages.net_packet")
	proto.RegisterType((*Ping)(nil), "NetMessages.ping")
	proto.RegisterType((*Pong)(nil), "NetMessages.pong")
	proto.RegisterType((*FindNeighbourReq)(nil), "NetMessages.find_neighbour_req")
	proto.RegisterType((*Neighbours)(nil), "NetMessages.neighbours")
	proto.RegisterType((*Node)(nil), "NetMessages.node")
	proto.RegisterType((*SyncReq)(nil), "NetMessages.sync_req")
	proto.RegisterType((*SyncAck)(nil), "NetMessages.sync_ack")
	proto.RegisterType((*SyncStart)(nil), "NetMessages.sync_start")
	proto.RegisterType((*SyncDone)(nil), "NetMessages.sync_done")
}

func init() { proto.RegisterFile("NetMessages/Control.proto", fileDescriptor_74ad738315f2b2f5) }

var fileDescriptor_74ad738315f2b2f5 = []byte{
	// 738 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x5b, 0x6f, 0xe2, 0x46,
	0x14, 0xc6, 0xc4, 0xe1, 0x72, 0x30, 0xe0, 0x8e, 0x68, 0xe2, 0xa6, 0x95, 0x82, 0xac, 0x2a, 0xe5,
	0xa1, 0x22, 0x11, 0x51, 0xa5, 0x4a, 0x55, 0xab, 0x92, 0x90, 0x02, 0x8a, 0xea, 0x64, 0x27, 0xac,
	0xb4, 0xfb, 0x64, 0xf9, 0x32, 0x31, 0x5e, 0x13, 0x8f, 0xe3, 0x19, 0x22, 0xf1, 0xb6, 0xff, 0x61,
	0xff, 0xf0, 0x6a, 0xc6, 0x36, 0x97, 0x90, 0x7d, 0xdc, 0x27, 0xce, 0x77, 0xbe, 0xcb, 0x1c, 0xec,
	0x33, 0x86, 0x9f, 0x2c, 0xc2, 0xff, 0x27, 0x8c, 0x39, 0x01, 0x61, 0xe7, 0xd7, 0x34, 0xe6, 0x29,
	0x5d, 0xf4, 0x93, 0x94, 0x72, 0x8a, 0x1a, 0x5b, 0xd4, 0xc9, 0x69, 0x40, 0x69, 0xb0, 0x20, 0xe7,
	0x92, 0x72, 0x97, 0x8f, 0xe7, 0x3c, 0x7c, 0x22, 0x8c, 0x3b, 0x4f, 0x49, 0xa6, 0x36, 0xbf, 0x54,
	0x01, 0x62, 0xc2, 0xed, 0xc4, 0xf1, 0x22, 0xc2, 0xd1, 0xdf, 0xd0, 0xc8, 0x2a, 0x9b, 0xaf, 0x12,
	0x62, 0x28, 0x5d, 0xa5, 0xd7, 0x1a, 0xfc, 0xd2, 0xdf, 0x8a, 0xec, 0x6f, 0xd4, 0x7d, 0xa1, 0xc1,
	0x90, 0x81, 0xd9, 0x2a, 0x21, 0xe8, 0x4f, 0xa8, 0xaf, 0x0f, 0x30, 0xca, 0x5d, 0xa5, 0xd7, 0x18,
	0x9c, 0xf4, 0xb3, 0x11, 0xfa, 0xc5, 0x08, 0xfd, 0x59, 0xa1, 0xc0, 0x1b, 0x31, 0x32, 0xa0, 0xfa,
	0x42, 0x52, 0x16, 0xd2, 0xd8, 0x38, 0xe8, 0x2a, 0x3d, 0x0d, 0x17, 0x10, 0xb5, 0xa0, 0x1c, 0xfa,
	0x46, 0x4d, 0x36, 0xcb, 0xa1, 0x8f, 0x8e, 0xa0, 0x12, 0x50, 0xc6, 0xc2, 0xc4, 0xa8, 0x77, 0x95,
	0x5e, 0x0d, 0xe7, 0x08, 0x1d, 0x43, 0x35, 0xa6, 0x3e, 0xb1, 0x43, 0xdf, 0x00, 0x29, 0xae, 0x08,
	0x38, 0xf5, 0x51, 0x17, 0x34, 0x49, 0x24, 0x4b, 0xd7, 0x8e, 0xc8, 0xca, 0x68, 0x48, 0x16, 0x44,
	0xef, 0x7e, 0xe9, 0xde, 0x92, 0x15, 0x42, 0xa0, 0xb2, 0x30, 0x88, 0x0d, 0x4d, 0x32, 0xb2, 0x46,
	0x17, 0x50, 0x4f, 0xc2, 0x38, 0xb0, 0x7d, 0x87, 0x3b, 0x86, 0x2a, 0xff, 0xca, 0x0f, 0x3b, 0xcf,
	0x41, 0xb0, 0x93, 0x12, 0xae, 0x89, 0xdf, 0x91, 0xc3, 0x1d, 0xe9, 0xa0, 0x85, 0xe3, 0xf0, 0x2d,
	0x07, 0xcd, 0x1d, 0x34, 0x77, 0x7c, 0x80, 0xe3, 0xc7, 0x30, 0xf6, 0xed, 0x98, 0x84, 0xc1, 0xdc,
	0xa5, 0xcb, 0xd4, 0x4e, 0xc9, 0x73, 0xe6, 0xaf, 0x48, 0xff, 0xe9, 0x8e, 0x7f, 0x5f, 0x3b, 0x29,
	0xe1, 0x8e, 0xe8, 0x5a, 0x45, 0x13, 0x93, 0x67, 0x99, 0xfc, 0x2f, 0xb4, 0x36, 0x42, 0x19, 0x58,
	0x95, 0x81, 0xc7, 0xaf, 0x5e, 0x65, 0x2e, 0x61, 0x93, 0x12, 0x6e, 0xae, 0x91, 0x4c, 0xf8, 0x0b,
	0x9a, 0x6c, 0x15, 0x7b, 0x9b, 0x89, 0x9a, 0x32, 0xe0, 0xc7, 0x9d, 0x80, 0x42, 0x31, 0x29, 0xe1,
	0x86, 0xa8, 0x8b, 0xe3, 0x0b, 0xb3, 0xe3, 0x45, 0x99, 0xb9, 0xf5, 0x2d, 0xb3, 0xe3, 0x45, 0x85,
	0x79, 0xe8, 0x45, 0xd2, 0x3c, 0x84, 0xb6, 0xa4, 0x18, 0x77, 0x52, 0x9e, 0xd9, 0xdb, 0x6f, 0x0c,
	0xbf, 0xd1, 0x88, 0xe1, 0x05, 0x7a, 0x10, 0x40, 0x46, 0xfc, 0x03, 0x2d, 0x49, 0xfb, 0x34, 0x26,
	0x59, 0x82, 0x2e, 0x13, 0x8e, 0xf6, 0x13, 0x84, 0x64, 0x52, 0xc2, 0x9a, 0x00, 0x23, 0x1a, 0x13,
	0xe1, 0x37, 0x5f, 0x40, 0x15, 0xbb, 0x8d, 0x6a, 0xa0, 0xde, 0x4f, 0xad, 0xb1, 0x5e, 0x92, 0xd5,
	0x9d, 0x35, 0xd6, 0x15, 0xd4, 0x01, 0xfd, 0xbf, 0xa9, 0x35, 0xb2, 0x6e, 0xa6, 0xe3, 0xc9, 0xd5,
	0xdd, 0x7b, 0x8c, 0x6f, 0xde, 0xe9, 0x65, 0xd4, 0x84, 0xfa, 0xba, 0xa3, 0x1f, 0xa0, 0x06, 0x54,
	0x1f, 0x3e, 0x5a, 0xd7, 0x82, 0x53, 0x0b, 0x30, 0xbc, 0xbe, 0xd5, 0x0f, 0x85, 0x50, 0x80, 0x87,
	0xd9, 0x10, 0xcf, 0xf4, 0x0a, 0xd2, 0xa0, 0x26, 0xe0, 0xe8, 0xce, 0xba, 0xd1, 0xab, 0x57, 0x15,
	0x50, 0xc5, 0xb4, 0xe6, 0x11, 0xa8, 0x62, 0xad, 0xc4, 0xee, 0x73, 0x2a, 0x6f, 0xa1, 0x86, 0xcb,
	0x9c, 0x9a, 0x97, 0xa0, 0x8a, 0xe5, 0x79, 0xdd, 0x47, 0x3f, 0x43, 0x3d, 0x25, 0xc9, 0x62, 0x65,
	0x73, 0x1a, 0xc9, 0x7b, 0xa7, 0xe1, 0x9a, 0x6c, 0xcc, 0x68, 0x64, 0x76, 0x00, 0xed, 0x6f, 0x8e,
	0xf9, 0x87, 0xb8, 0xf7, 0xc5, 0xeb, 0x47, 0xbf, 0xc1, 0xa1, 0xb8, 0x0f, 0xcc, 0x50, 0xba, 0x07,
	0x7b, 0x7b, 0x2b, 0x18, 0x9c, 0xf1, 0xe6, 0x09, 0xa8, 0xa2, 0x10, 0x57, 0x46, 0xfc, 0xe6, 0x33,
	0xc8, 0xda, 0xfc, 0xac, 0x40, 0xad, 0xd8, 0x08, 0x74, 0x06, 0x6d, 0xd7, 0xb3, 0x03, 0x12, 0x13,
	0x16, 0x32, 0x7b, 0xee, 0xb0, 0x79, 0xae, 0x6d, 0xba, 0xde, 0x38, 0xeb, 0x4e, 0x1c, 0x36, 0x47,
	0xbf, 0x42, 0x8b, 0xef, 0xca, 0xb2, 0xf9, 0x35, 0xbe, 0xad, 0x3a, 0x83, 0xf6, 0x5a, 0x35, 0xc8,
	0x64, 0xd9, 0x67, 0xa2, 0x59, 0xc8, 0x06, 0x42, 0x67, 0x7e, 0xca, 0x27, 0x70, 0xbc, 0x08, 0xfd,
	0x0e, 0xc8, 0x5b, 0xa6, 0x29, 0x89, 0xb9, 0xed, 0x2e, 0xa8, 0x17, 0x6d, 0xa7, 0xeb, 0x39, 0x73,
	0x25, 0x08, 0x79, 0xc2, 0x05, 0x74, 0x5e, 0xa9, 0xc5, 0xd3, 0xe1, 0xf2, 0x18, 0x15, 0xa3, 0x1d,
	0xbd, 0x64, 0xcc, 0x05, 0xc0, 0x66, 0x07, 0xbf, 0xfb, 0x69, 0x0d, 0xa8, 0xaf, 0xf7, 0xd5, 0xad,
	0xc8, 0x8f, 0xe9, 0xe5, 0xd7, 0x00, 0x00, 0x00, 0xff, 0xff, 0x35, 0xcb, 0xf1, 0xfd, 0x07, 0x06,
	0x00, 0x00,
}
