// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Messages/Messages.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PacketType int32

const (
	Packet_BUNDLE      PacketType = 0
	Packet_BLOCK       PacketType = 1
	Packet_REP         PacketType = 2
	Packet_WEAKREQ     PacketType = 3
	Packet_SANITYCHECK PacketType = 4
	Packet_INITIAL     PacketType = 5
)

var PacketType_name = map[int32]string{
	0: "BUNDLE",
	1: "BLOCK",
	2: "REP",
	3: "WEAKREQ",
	4: "SANITYCHECK",
	5: "INITIAL",
}

var PacketType_value = map[string]int32{
	"BUNDLE":      0,
	"BLOCK":       1,
	"REP":         2,
	"WEAKREQ":     3,
	"SANITYCHECK": 4,
	"INITIAL":     5,
}

func (x PacketType) String() string {
	return proto.EnumName(PacketType_name, int32(x))
}

func (PacketType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{0, 0}
}

type BundleType int32

const (
	Bundle_POWERFUL BundleType = 0
	Bundle_WEAK     BundleType = 1
)

var BundleType_name = map[int32]string{
	0: "POWERFUL",
	1: "WEAK",
}

var BundleType_value = map[string]int32{
	"POWERFUL": 0,
	"WEAK":     1,
}

func (x BundleType) String() string {
	return proto.EnumName(BundleType_name, int32(x))
}

func (BundleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{3, 0}
}

type RepType int32

const (
	Rep_POPR      RepType = 0
	Rep_POPRA     RepType = 1
	Rep_REVIEW    RepType = 2
	Rep_MEDIATOR  RepType = 3
	Rep_AGREE     RepType = 4
	Rep_REVENGE   RepType = 5
	Rep_CANCEL    RepType = 6
	Rep_COMPLAINT RepType = 7
	Rep_DONE      RepType = 8
)

var RepType_name = map[int32]string{
	0: "POPR",
	1: "POPRA",
	2: "REVIEW",
	3: "MEDIATOR",
	4: "AGREE",
	5: "REVENGE",
	6: "CANCEL",
	7: "COMPLAINT",
	8: "DONE",
}

var RepType_value = map[string]int32{
	"POPR":      0,
	"POPRA":     1,
	"REVIEW":    2,
	"MEDIATOR":  3,
	"AGREE":     4,
	"REVENGE":   5,
	"CANCEL":    6,
	"COMPLAINT": 7,
	"DONE":      8,
}

func (x RepType) String() string {
	return proto.EnumName(RepType_name, int32(x))
}

func (RepType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{6, 0}
}

type Packet struct {
	PacketType         PacketType           `protobuf:"varint,1,opt,name=packet_type,json=packetType,proto3,enum=msg.PacketType" json:"packet_type,omitempty"`
	Timestamp          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Prev               []byte               `protobuf:"bytes,3,opt,name=prev,proto3" json:"prev,omitempty"`
	Nonce              []byte               `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Diff               uint32               `protobuf:"varint,5,opt,name=diff,proto3" json:"diff,omitempty"`
	Hash               []byte               `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	CurrentBlockNumber uint64               `protobuf:"varint,7,opt,name=current_block_number,json=currentBlockNumber,proto3" json:"current_block_number,omitempty"`
	Addr               []byte               `protobuf:"bytes,13,opt,name=addr,proto3" json:"addr,omitempty"`
	Sign               []byte               `protobuf:"bytes,14,opt,name=sign,proto3" json:"sign,omitempty"`
	CurrentBlockHash   []byte               `protobuf:"bytes,15,opt,name=current_block_hash,json=currentBlockHash,proto3" json:"current_block_hash,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Packet_BlockData
	//	*Packet_BundleData
	//	*Packet_RepData
	//	*Packet_WeakData
	//	*Packet_SanityData
	//	*Packet_InitialData
	Data                 isPacket_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{0}
}

func (m *Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packet.Unmarshal(m, b)
}
func (m *Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packet.Marshal(b, m, deterministic)
}
func (m *Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packet.Merge(m, src)
}
func (m *Packet) XXX_Size() int {
	return xxx_messageInfo_Packet.Size(m)
}
func (m *Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_Packet proto.InternalMessageInfo

func (m *Packet) GetPacketType() PacketType {
	if m != nil {
		return m.PacketType
	}
	return Packet_BUNDLE
}

func (m *Packet) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Packet) GetPrev() []byte {
	if m != nil {
		return m.Prev
	}
	return nil
}

func (m *Packet) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Packet) GetDiff() uint32 {
	if m != nil {
		return m.Diff
	}
	return 0
}

func (m *Packet) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Packet) GetCurrentBlockNumber() uint64 {
	if m != nil {
		return m.CurrentBlockNumber
	}
	return 0
}

func (m *Packet) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

func (m *Packet) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *Packet) GetCurrentBlockHash() []byte {
	if m != nil {
		return m.CurrentBlockHash
	}
	return nil
}

type isPacket_Data interface {
	isPacket_Data()
}

type Packet_BlockData struct {
	BlockData *Block `protobuf:"bytes,8,opt,name=blockData,proto3,oneof"`
}

type Packet_BundleData struct {
	BundleData *Bundle `protobuf:"bytes,9,opt,name=bundleData,proto3,oneof"`
}

type Packet_RepData struct {
	RepData *Rep `protobuf:"bytes,10,opt,name=repData,proto3,oneof"`
}

type Packet_WeakData struct {
	WeakData *WeakReq `protobuf:"bytes,11,opt,name=weakData,proto3,oneof"`
}

type Packet_SanityData struct {
	SanityData *SanityCheck `protobuf:"bytes,12,opt,name=sanityData,proto3,oneof"`
}

type Packet_InitialData struct {
	InitialData *Initial `protobuf:"bytes,16,opt,name=initialData,proto3,oneof"`
}

func (*Packet_BlockData) isPacket_Data() {}

func (*Packet_BundleData) isPacket_Data() {}

func (*Packet_RepData) isPacket_Data() {}

func (*Packet_WeakData) isPacket_Data() {}

func (*Packet_SanityData) isPacket_Data() {}

func (*Packet_InitialData) isPacket_Data() {}

func (m *Packet) GetData() isPacket_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Packet) GetBlockData() *Block {
	if x, ok := m.GetData().(*Packet_BlockData); ok {
		return x.BlockData
	}
	return nil
}

func (m *Packet) GetBundleData() *Bundle {
	if x, ok := m.GetData().(*Packet_BundleData); ok {
		return x.BundleData
	}
	return nil
}

func (m *Packet) GetRepData() *Rep {
	if x, ok := m.GetData().(*Packet_RepData); ok {
		return x.RepData
	}
	return nil
}

func (m *Packet) GetWeakData() *WeakReq {
	if x, ok := m.GetData().(*Packet_WeakData); ok {
		return x.WeakData
	}
	return nil
}

func (m *Packet) GetSanityData() *SanityCheck {
	if x, ok := m.GetData().(*Packet_SanityData); ok {
		return x.SanityData
	}
	return nil
}

func (m *Packet) GetInitialData() *Initial {
	if x, ok := m.GetData().(*Packet_InitialData); ok {
		return x.InitialData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Packet) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Packet_OneofMarshaler, _Packet_OneofUnmarshaler, _Packet_OneofSizer, []interface{}{
		(*Packet_BlockData)(nil),
		(*Packet_BundleData)(nil),
		(*Packet_RepData)(nil),
		(*Packet_WeakData)(nil),
		(*Packet_SanityData)(nil),
		(*Packet_InitialData)(nil),
	}
}

func _Packet_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Packet)
	// data
	switch x := m.Data.(type) {
	case *Packet_BlockData:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BlockData); err != nil {
			return err
		}
	case *Packet_BundleData:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.BundleData); err != nil {
			return err
		}
	case *Packet_RepData:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RepData); err != nil {
			return err
		}
	case *Packet_WeakData:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.WeakData); err != nil {
			return err
		}
	case *Packet_SanityData:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SanityData); err != nil {
			return err
		}
	case *Packet_InitialData:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InitialData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Packet.Data has unexpected type %T", x)
	}
	return nil
}

func _Packet_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Packet)
	switch tag {
	case 8: // data.blockData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Block)
		err := b.DecodeMessage(msg)
		m.Data = &Packet_BlockData{msg}
		return true, err
	case 9: // data.bundleData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Bundle)
		err := b.DecodeMessage(msg)
		m.Data = &Packet_BundleData{msg}
		return true, err
	case 10: // data.repData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Rep)
		err := b.DecodeMessage(msg)
		m.Data = &Packet_RepData{msg}
		return true, err
	case 11: // data.weakData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(WeakReq)
		err := b.DecodeMessage(msg)
		m.Data = &Packet_WeakData{msg}
		return true, err
	case 12: // data.sanityData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SanityCheck)
		err := b.DecodeMessage(msg)
		m.Data = &Packet_SanityData{msg}
		return true, err
	case 16: // data.initialData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Initial)
		err := b.DecodeMessage(msg)
		m.Data = &Packet_InitialData{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Packet_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Packet)
	// data
	switch x := m.Data.(type) {
	case *Packet_BlockData:
		s := proto.Size(x.BlockData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_BundleData:
		s := proto.Size(x.BundleData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_RepData:
		s := proto.Size(x.RepData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_WeakData:
		s := proto.Size(x.WeakData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_SanityData:
		s := proto.Size(x.SanityData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Packet_InitialData:
		s := proto.Size(x.InitialData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Block struct {
	Reqs                 []*Packet      `protobuf:"bytes,1,rep,name=reqs,proto3" json:"reqs,omitempty"`
	PacketHashs          []*HashArray   `protobuf:"bytes,2,rep,name=packetHashs,proto3" json:"packetHashs,omitempty"`
	Sanities             []*SanityCheck `protobuf:"bytes,3,rep,name=sanities,proto3" json:"sanities,omitempty"`
	Coinbase             *Tx            `protobuf:"bytes,4,opt,name=coinbase,proto3" json:"coinbase,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{1}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetReqs() []*Packet {
	if m != nil {
		return m.Reqs
	}
	return nil
}

func (m *Block) GetPacketHashs() []*HashArray {
	if m != nil {
		return m.PacketHashs
	}
	return nil
}

func (m *Block) GetSanities() []*SanityCheck {
	if m != nil {
		return m.Sanities
	}
	return nil
}

func (m *Block) GetCoinbase() *Tx {
	if m != nil {
		return m.Coinbase
	}
	return nil
}

type HashArray struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HashArray) Reset()         { *m = HashArray{} }
func (m *HashArray) String() string { return proto.CompactTextString(m) }
func (*HashArray) ProtoMessage()    {}
func (*HashArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{2}
}

func (m *HashArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HashArray.Unmarshal(m, b)
}
func (m *HashArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HashArray.Marshal(b, m, deterministic)
}
func (m *HashArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HashArray.Merge(m, src)
}
func (m *HashArray) XXX_Size() int {
	return xxx_messageInfo_HashArray.Size(m)
}
func (m *HashArray) XXX_DiscardUnknown() {
	xxx_messageInfo_HashArray.DiscardUnknown(m)
}

var xxx_messageInfo_HashArray proto.InternalMessageInfo

func (m *HashArray) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type Bundle struct {
	BundleType           BundleType `protobuf:"varint,1,opt,name=bundle_type,json=bundleType,proto3,enum=msg.BundleType" json:"bundle_type,omitempty"`
	Hash                 []byte     `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Transactions         []*Tx      `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Verify1              []byte     `protobuf:"bytes,4,opt,name=verify1,proto3" json:"verify1,omitempty"`
	Verify2              []byte     `protobuf:"bytes,5,opt,name=verify2,proto3" json:"verify2,omitempty"`
	Verify3              []byte     `protobuf:"bytes,6,opt,name=verify3,proto3" json:"verify3,omitempty"`
	Nonce                []byte     `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Bundle) Reset()         { *m = Bundle{} }
func (m *Bundle) String() string { return proto.CompactTextString(m) }
func (*Bundle) ProtoMessage()    {}
func (*Bundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{3}
}

func (m *Bundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bundle.Unmarshal(m, b)
}
func (m *Bundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bundle.Marshal(b, m, deterministic)
}
func (m *Bundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bundle.Merge(m, src)
}
func (m *Bundle) XXX_Size() int {
	return xxx_messageInfo_Bundle.Size(m)
}
func (m *Bundle) XXX_DiscardUnknown() {
	xxx_messageInfo_Bundle.DiscardUnknown(m)
}

var xxx_messageInfo_Bundle proto.InternalMessageInfo

func (m *Bundle) GetBundleType() BundleType {
	if m != nil {
		return m.BundleType
	}
	return Bundle_POWERFUL
}

func (m *Bundle) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Bundle) GetTransactions() []*Tx {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Bundle) GetVerify1() []byte {
	if m != nil {
		return m.Verify1
	}
	return nil
}

func (m *Bundle) GetVerify2() []byte {
	if m != nil {
		return m.Verify2
	}
	return nil
}

func (m *Bundle) GetVerify3() []byte {
	if m != nil {
		return m.Verify3
	}
	return nil
}

func (m *Bundle) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

type Tx struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	BundleHash           []byte   `protobuf:"bytes,6,opt,name=bundle_hash,json=bundleHash,proto3" json:"bundle_hash,omitempty"`
	RefTx                []byte   `protobuf:"bytes,2,opt,name=refTx,proto3" json:"refTx,omitempty"`
	Sign                 []byte   `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Value                int64    `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	Tag                  []byte   `protobuf:"bytes,5,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tx) Reset()         { *m = Tx{} }
func (m *Tx) String() string { return proto.CompactTextString(m) }
func (*Tx) ProtoMessage()    {}
func (*Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{4}
}

func (m *Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tx.Unmarshal(m, b)
}
func (m *Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tx.Marshal(b, m, deterministic)
}
func (m *Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tx.Merge(m, src)
}
func (m *Tx) XXX_Size() int {
	return xxx_messageInfo_Tx.Size(m)
}
func (m *Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Tx proto.InternalMessageInfo

func (m *Tx) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Tx) GetBundleHash() []byte {
	if m != nil {
		return m.BundleHash
	}
	return nil
}

func (m *Tx) GetRefTx() []byte {
	if m != nil {
		return m.RefTx
	}
	return nil
}

func (m *Tx) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *Tx) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Tx) GetTag() []byte {
	if m != nil {
		return m.Tag
	}
	return nil
}

type WeakReq struct {
	Hash                 []byte   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	TotalTx              uint32   `protobuf:"varint,2,opt,name=total_tx,json=totalTx,proto3" json:"total_tx,omitempty"`
	TotalFee             uint32   `protobuf:"varint,3,opt,name=total_fee,json=totalFee,proto3" json:"total_fee,omitempty"`
	Burn                 *Bundle  `protobuf:"bytes,4,opt,name=burn,proto3" json:"burn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WeakReq) Reset()         { *m = WeakReq{} }
func (m *WeakReq) String() string { return proto.CompactTextString(m) }
func (*WeakReq) ProtoMessage()    {}
func (*WeakReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{5}
}

func (m *WeakReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeakReq.Unmarshal(m, b)
}
func (m *WeakReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeakReq.Marshal(b, m, deterministic)
}
func (m *WeakReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeakReq.Merge(m, src)
}
func (m *WeakReq) XXX_Size() int {
	return xxx_messageInfo_WeakReq.Size(m)
}
func (m *WeakReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WeakReq.DiscardUnknown(m)
}

var xxx_messageInfo_WeakReq proto.InternalMessageInfo

func (m *WeakReq) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *WeakReq) GetTotalTx() uint32 {
	if m != nil {
		return m.TotalTx
	}
	return 0
}

func (m *WeakReq) GetTotalFee() uint32 {
	if m != nil {
		return m.TotalFee
	}
	return 0
}

func (m *WeakReq) GetBurn() *Bundle {
	if m != nil {
		return m.Burn
	}
	return nil
}

type Rep struct {
	RepType RepType `protobuf:"varint,6,opt,name=rep_type,json=repType,proto3,enum=msg.RepType" json:"rep_type,omitempty"`
	Hash    []byte  `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Addr    []byte  `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*Rep_POPRData
	//	*Rep_POPRAData
	//	*Rep_ReviewData
	//	*Rep_MediatorData
	//	*Rep_AgreeData
	//	*Rep_RevengeData
	//	*Rep_CancelData
	//	*Rep_ComplaintData
	//	*Rep_DoneData
	Data                 isRep_Data           `protobuf_oneof:"data"`
	Verify1              []byte               `protobuf:"bytes,4,opt,name=verify1,proto3" json:"verify1,omitempty"`
	Verify2              []byte               `protobuf:"bytes,5,opt,name=verify2,proto3" json:"verify2,omitempty"`
	Nonce                []byte               `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Ref                  []byte               `protobuf:"bytes,8,opt,name=ref,proto3" json:"ref,omitempty"`
	Expire               *timestamp.Timestamp `protobuf:"bytes,14,opt,name=expire,proto3" json:"expire,omitempty"`
	Tag                  []byte               `protobuf:"bytes,18,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Rep) Reset()         { *m = Rep{} }
func (m *Rep) String() string { return proto.CompactTextString(m) }
func (*Rep) ProtoMessage()    {}
func (*Rep) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{6}
}

func (m *Rep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rep.Unmarshal(m, b)
}
func (m *Rep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rep.Marshal(b, m, deterministic)
}
func (m *Rep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rep.Merge(m, src)
}
func (m *Rep) XXX_Size() int {
	return xxx_messageInfo_Rep.Size(m)
}
func (m *Rep) XXX_DiscardUnknown() {
	xxx_messageInfo_Rep.DiscardUnknown(m)
}

var xxx_messageInfo_Rep proto.InternalMessageInfo

func (m *Rep) GetRepType() RepType {
	if m != nil {
		return m.RepType
	}
	return Rep_POPR
}

func (m *Rep) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

func (m *Rep) GetAddr() []byte {
	if m != nil {
		return m.Addr
	}
	return nil
}

type isRep_Data interface {
	isRep_Data()
}

type Rep_POPRData struct {
	POPRData *POPR `protobuf:"bytes,3,opt,name=p_o_p_r_data,json=pOPRData,proto3,oneof"`
}

type Rep_POPRAData struct {
	POPRAData *POPRA `protobuf:"bytes,9,opt,name=p_o_p_r_a_data,json=pOPRAData,proto3,oneof"`
}

type Rep_ReviewData struct {
	ReviewData *Review `protobuf:"bytes,10,opt,name=review_data,json=reviewData,proto3,oneof"`
}

type Rep_MediatorData struct {
	MediatorData *Mediator `protobuf:"bytes,11,opt,name=mediator_data,json=mediatorData,proto3,oneof"`
}

type Rep_AgreeData struct {
	AgreeData *Agree `protobuf:"bytes,12,opt,name=agree_data,json=agreeData,proto3,oneof"`
}

type Rep_RevengeData struct {
	RevengeData *Revenge `protobuf:"bytes,13,opt,name=revenge_data,json=revengeData,proto3,oneof"`
}

type Rep_CancelData struct {
	CancelData *Cancel `protobuf:"bytes,15,opt,name=cancel_data,json=cancelData,proto3,oneof"`
}

type Rep_ComplaintData struct {
	ComplaintData *Complaint `protobuf:"bytes,16,opt,name=complaint_data,json=complaintData,proto3,oneof"`
}

type Rep_DoneData struct {
	DoneData *Done `protobuf:"bytes,17,opt,name=done_data,json=doneData,proto3,oneof"`
}

func (*Rep_POPRData) isRep_Data() {}

func (*Rep_POPRAData) isRep_Data() {}

func (*Rep_ReviewData) isRep_Data() {}

func (*Rep_MediatorData) isRep_Data() {}

func (*Rep_AgreeData) isRep_Data() {}

func (*Rep_RevengeData) isRep_Data() {}

func (*Rep_CancelData) isRep_Data() {}

func (*Rep_ComplaintData) isRep_Data() {}

func (*Rep_DoneData) isRep_Data() {}

func (m *Rep) GetData() isRep_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Rep) GetPOPRData() *POPR {
	if x, ok := m.GetData().(*Rep_POPRData); ok {
		return x.POPRData
	}
	return nil
}

func (m *Rep) GetPOPRAData() *POPRA {
	if x, ok := m.GetData().(*Rep_POPRAData); ok {
		return x.POPRAData
	}
	return nil
}

func (m *Rep) GetReviewData() *Review {
	if x, ok := m.GetData().(*Rep_ReviewData); ok {
		return x.ReviewData
	}
	return nil
}

func (m *Rep) GetMediatorData() *Mediator {
	if x, ok := m.GetData().(*Rep_MediatorData); ok {
		return x.MediatorData
	}
	return nil
}

func (m *Rep) GetAgreeData() *Agree {
	if x, ok := m.GetData().(*Rep_AgreeData); ok {
		return x.AgreeData
	}
	return nil
}

func (m *Rep) GetRevengeData() *Revenge {
	if x, ok := m.GetData().(*Rep_RevengeData); ok {
		return x.RevengeData
	}
	return nil
}

func (m *Rep) GetCancelData() *Cancel {
	if x, ok := m.GetData().(*Rep_CancelData); ok {
		return x.CancelData
	}
	return nil
}

func (m *Rep) GetComplaintData() *Complaint {
	if x, ok := m.GetData().(*Rep_ComplaintData); ok {
		return x.ComplaintData
	}
	return nil
}

func (m *Rep) GetDoneData() *Done {
	if x, ok := m.GetData().(*Rep_DoneData); ok {
		return x.DoneData
	}
	return nil
}

func (m *Rep) GetVerify1() []byte {
	if m != nil {
		return m.Verify1
	}
	return nil
}

func (m *Rep) GetVerify2() []byte {
	if m != nil {
		return m.Verify2
	}
	return nil
}

func (m *Rep) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Rep) GetRef() []byte {
	if m != nil {
		return m.Ref
	}
	return nil
}

func (m *Rep) GetExpire() *timestamp.Timestamp {
	if m != nil {
		return m.Expire
	}
	return nil
}

func (m *Rep) GetTag() []byte {
	if m != nil {
		return m.Tag
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Rep) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Rep_OneofMarshaler, _Rep_OneofUnmarshaler, _Rep_OneofSizer, []interface{}{
		(*Rep_POPRData)(nil),
		(*Rep_POPRAData)(nil),
		(*Rep_ReviewData)(nil),
		(*Rep_MediatorData)(nil),
		(*Rep_AgreeData)(nil),
		(*Rep_RevengeData)(nil),
		(*Rep_CancelData)(nil),
		(*Rep_ComplaintData)(nil),
		(*Rep_DoneData)(nil),
	}
}

func _Rep_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Rep)
	// data
	switch x := m.Data.(type) {
	case *Rep_POPRData:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.POPRData); err != nil {
			return err
		}
	case *Rep_POPRAData:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.POPRAData); err != nil {
			return err
		}
	case *Rep_ReviewData:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReviewData); err != nil {
			return err
		}
	case *Rep_MediatorData:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MediatorData); err != nil {
			return err
		}
	case *Rep_AgreeData:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AgreeData); err != nil {
			return err
		}
	case *Rep_RevengeData:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RevengeData); err != nil {
			return err
		}
	case *Rep_CancelData:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CancelData); err != nil {
			return err
		}
	case *Rep_ComplaintData:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ComplaintData); err != nil {
			return err
		}
	case *Rep_DoneData:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.DoneData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Rep.Data has unexpected type %T", x)
	}
	return nil
}

func _Rep_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Rep)
	switch tag {
	case 3: // data.p_o_p_r_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(POPR)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_POPRData{msg}
		return true, err
	case 9: // data.p_o_p_r_a_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(POPRA)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_POPRAData{msg}
		return true, err
	case 10: // data.review_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Review)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_ReviewData{msg}
		return true, err
	case 11: // data.mediator_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Mediator)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_MediatorData{msg}
		return true, err
	case 12: // data.agree_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Agree)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_AgreeData{msg}
		return true, err
	case 13: // data.revenge_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Revenge)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_RevengeData{msg}
		return true, err
	case 15: // data.cancel_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Cancel)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_CancelData{msg}
		return true, err
	case 16: // data.complaint_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Complaint)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_ComplaintData{msg}
		return true, err
	case 17: // data.done_data
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Done)
		err := b.DecodeMessage(msg)
		m.Data = &Rep_DoneData{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Rep_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Rep)
	// data
	switch x := m.Data.(type) {
	case *Rep_POPRData:
		s := proto.Size(x.POPRData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rep_POPRAData:
		s := proto.Size(x.POPRAData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rep_ReviewData:
		s := proto.Size(x.ReviewData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rep_MediatorData:
		s := proto.Size(x.MediatorData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rep_AgreeData:
		s := proto.Size(x.AgreeData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rep_RevengeData:
		s := proto.Size(x.RevengeData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rep_CancelData:
		s := proto.Size(x.CancelData)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rep_ComplaintData:
		s := proto.Size(x.ComplaintData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Rep_DoneData:
		s := proto.Size(x.DoneData)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Review struct {
	Rate                 uint32   `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
	IpfsReview           []byte   `protobuf:"bytes,3,opt,name=ipfs_review,json=ipfsReview,proto3" json:"ipfs_review,omitempty"`
	TxAddr               [][]byte `protobuf:"bytes,4,rep,name=tx_addr,json=txAddr,proto3" json:"tx_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Review) Reset()         { *m = Review{} }
func (m *Review) String() string { return proto.CompactTextString(m) }
func (*Review) ProtoMessage()    {}
func (*Review) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{7}
}

func (m *Review) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Review.Unmarshal(m, b)
}
func (m *Review) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Review.Marshal(b, m, deterministic)
}
func (m *Review) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Review.Merge(m, src)
}
func (m *Review) XXX_Size() int {
	return xxx_messageInfo_Review.Size(m)
}
func (m *Review) XXX_DiscardUnknown() {
	xxx_messageInfo_Review.DiscardUnknown(m)
}

var xxx_messageInfo_Review proto.InternalMessageInfo

func (m *Review) GetRate() uint32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *Review) GetIpfsReview() []byte {
	if m != nil {
		return m.IpfsReview
	}
	return nil
}

func (m *Review) GetTxAddr() [][]byte {
	if m != nil {
		return m.TxAddr
	}
	return nil
}

type POPR struct {
	Value                uint64               `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Mediator             [][]byte             `protobuf:"bytes,3,rep,name=mediator,proto3" json:"mediator,omitempty"`
	MediatorExpire       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=mediator_expire,json=mediatorExpire,proto3" json:"mediator_expire,omitempty"`
	Certified            *Cert                `protobuf:"bytes,5,opt,name=certified,proto3" json:"certified,omitempty"`
	Confidence           uint32               `protobuf:"varint,6,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *POPR) Reset()         { *m = POPR{} }
func (m *POPR) String() string { return proto.CompactTextString(m) }
func (*POPR) ProtoMessage()    {}
func (*POPR) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{8}
}

func (m *POPR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_POPR.Unmarshal(m, b)
}
func (m *POPR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_POPR.Marshal(b, m, deterministic)
}
func (m *POPR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_POPR.Merge(m, src)
}
func (m *POPR) XXX_Size() int {
	return xxx_messageInfo_POPR.Size(m)
}
func (m *POPR) XXX_DiscardUnknown() {
	xxx_messageInfo_POPR.DiscardUnknown(m)
}

var xxx_messageInfo_POPR proto.InternalMessageInfo

func (m *POPR) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *POPR) GetMediator() [][]byte {
	if m != nil {
		return m.Mediator
	}
	return nil
}

func (m *POPR) GetMediatorExpire() *timestamp.Timestamp {
	if m != nil {
		return m.MediatorExpire
	}
	return nil
}

func (m *POPR) GetCertified() *Cert {
	if m != nil {
		return m.Certified
	}
	return nil
}

func (m *POPR) GetConfidence() uint32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

type Cert struct {
	CertAddr             []byte   `protobuf:"bytes,1,opt,name=cert_addr,json=certAddr,proto3" json:"cert_addr,omitempty"`
	CertSign             []byte   `protobuf:"bytes,2,opt,name=cert_sign,json=certSign,proto3" json:"cert_sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cert) Reset()         { *m = Cert{} }
func (m *Cert) String() string { return proto.CompactTextString(m) }
func (*Cert) ProtoMessage()    {}
func (*Cert) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{9}
}

func (m *Cert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cert.Unmarshal(m, b)
}
func (m *Cert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cert.Marshal(b, m, deterministic)
}
func (m *Cert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cert.Merge(m, src)
}
func (m *Cert) XXX_Size() int {
	return xxx_messageInfo_Cert.Size(m)
}
func (m *Cert) XXX_DiscardUnknown() {
	xxx_messageInfo_Cert.DiscardUnknown(m)
}

var xxx_messageInfo_Cert proto.InternalMessageInfo

func (m *Cert) GetCertAddr() []byte {
	if m != nil {
		return m.CertAddr
	}
	return nil
}

func (m *Cert) GetCertSign() []byte {
	if m != nil {
		return m.CertSign
	}
	return nil
}

type POPRA struct {
	Mediator             [][]byte `protobuf:"bytes,1,rep,name=mediator,proto3" json:"mediator,omitempty"`
	NoFeedback           bool     `protobuf:"varint,2,opt,name=no_feedback,json=noFeedback,proto3" json:"no_feedback,omitempty"`
	LockOnly             bool     `protobuf:"varint,3,opt,name=lock_only,json=lockOnly,proto3" json:"lock_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *POPRA) Reset()         { *m = POPRA{} }
func (m *POPRA) String() string { return proto.CompactTextString(m) }
func (*POPRA) ProtoMessage()    {}
func (*POPRA) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{10}
}

func (m *POPRA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_POPRA.Unmarshal(m, b)
}
func (m *POPRA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_POPRA.Marshal(b, m, deterministic)
}
func (m *POPRA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_POPRA.Merge(m, src)
}
func (m *POPRA) XXX_Size() int {
	return xxx_messageInfo_POPRA.Size(m)
}
func (m *POPRA) XXX_DiscardUnknown() {
	xxx_messageInfo_POPRA.DiscardUnknown(m)
}

var xxx_messageInfo_POPRA proto.InternalMessageInfo

func (m *POPRA) GetMediator() [][]byte {
	if m != nil {
		return m.Mediator
	}
	return nil
}

func (m *POPRA) GetNoFeedback() bool {
	if m != nil {
		return m.NoFeedback
	}
	return false
}

func (m *POPRA) GetLockOnly() bool {
	if m != nil {
		return m.LockOnly
	}
	return false
}

type Mediator struct {
	Refund               *Bundle  `protobuf:"bytes,1,opt,name=refund,proto3" json:"refund,omitempty"`
	IpfsDetail           []byte   `protobuf:"bytes,2,opt,name=ipfs_detail,json=ipfsDetail,proto3" json:"ipfs_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mediator) Reset()         { *m = Mediator{} }
func (m *Mediator) String() string { return proto.CompactTextString(m) }
func (*Mediator) ProtoMessage()    {}
func (*Mediator) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{11}
}

func (m *Mediator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mediator.Unmarshal(m, b)
}
func (m *Mediator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mediator.Marshal(b, m, deterministic)
}
func (m *Mediator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mediator.Merge(m, src)
}
func (m *Mediator) XXX_Size() int {
	return xxx_messageInfo_Mediator.Size(m)
}
func (m *Mediator) XXX_DiscardUnknown() {
	xxx_messageInfo_Mediator.DiscardUnknown(m)
}

var xxx_messageInfo_Mediator proto.InternalMessageInfo

func (m *Mediator) GetRefund() *Bundle {
	if m != nil {
		return m.Refund
	}
	return nil
}

func (m *Mediator) GetIpfsDetail() []byte {
	if m != nil {
		return m.IpfsDetail
	}
	return nil
}

type Agree struct {
	Mediator             []byte   `protobuf:"bytes,1,opt,name=mediator,proto3" json:"mediator,omitempty"`
	LockMoney            *Bundle  `protobuf:"bytes,2,opt,name=lock_money,json=lockMoney,proto3" json:"lock_money,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Agree) Reset()         { *m = Agree{} }
func (m *Agree) String() string { return proto.CompactTextString(m) }
func (*Agree) ProtoMessage()    {}
func (*Agree) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{12}
}

func (m *Agree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Agree.Unmarshal(m, b)
}
func (m *Agree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Agree.Marshal(b, m, deterministic)
}
func (m *Agree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Agree.Merge(m, src)
}
func (m *Agree) XXX_Size() int {
	return xxx_messageInfo_Agree.Size(m)
}
func (m *Agree) XXX_DiscardUnknown() {
	xxx_messageInfo_Agree.DiscardUnknown(m)
}

var xxx_messageInfo_Agree proto.InternalMessageInfo

func (m *Agree) GetMediator() []byte {
	if m != nil {
		return m.Mediator
	}
	return nil
}

func (m *Agree) GetLockMoney() *Bundle {
	if m != nil {
		return m.LockMoney
	}
	return nil
}

type Revenge struct {
	RevengeBundle        *Bundle  `protobuf:"bytes,1,opt,name=revenge_bundle,json=revengeBundle,proto3" json:"revenge_bundle,omitempty"`
	IpfsDetail           []byte   `protobuf:"bytes,2,opt,name=ipfs_detail,json=ipfsDetail,proto3" json:"ipfs_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Revenge) Reset()         { *m = Revenge{} }
func (m *Revenge) String() string { return proto.CompactTextString(m) }
func (*Revenge) ProtoMessage()    {}
func (*Revenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{13}
}

func (m *Revenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Revenge.Unmarshal(m, b)
}
func (m *Revenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Revenge.Marshal(b, m, deterministic)
}
func (m *Revenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Revenge.Merge(m, src)
}
func (m *Revenge) XXX_Size() int {
	return xxx_messageInfo_Revenge.Size(m)
}
func (m *Revenge) XXX_DiscardUnknown() {
	xxx_messageInfo_Revenge.DiscardUnknown(m)
}

var xxx_messageInfo_Revenge proto.InternalMessageInfo

func (m *Revenge) GetRevengeBundle() *Bundle {
	if m != nil {
		return m.RevengeBundle
	}
	return nil
}

func (m *Revenge) GetIpfsDetail() []byte {
	if m != nil {
		return m.IpfsDetail
	}
	return nil
}

type Cancel struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cancel) Reset()         { *m = Cancel{} }
func (m *Cancel) String() string { return proto.CompactTextString(m) }
func (*Cancel) ProtoMessage()    {}
func (*Cancel) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{14}
}

func (m *Cancel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cancel.Unmarshal(m, b)
}
func (m *Cancel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cancel.Marshal(b, m, deterministic)
}
func (m *Cancel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cancel.Merge(m, src)
}
func (m *Cancel) XXX_Size() int {
	return xxx_messageInfo_Cancel.Size(m)
}
func (m *Cancel) XXX_DiscardUnknown() {
	xxx_messageInfo_Cancel.DiscardUnknown(m)
}

var xxx_messageInfo_Cancel proto.InternalMessageInfo

type Done struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Done) Reset()         { *m = Done{} }
func (m *Done) String() string { return proto.CompactTextString(m) }
func (*Done) ProtoMessage()    {}
func (*Done) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{15}
}

func (m *Done) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Done.Unmarshal(m, b)
}
func (m *Done) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Done.Marshal(b, m, deterministic)
}
func (m *Done) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Done.Merge(m, src)
}
func (m *Done) XXX_Size() int {
	return xxx_messageInfo_Done.Size(m)
}
func (m *Done) XXX_DiscardUnknown() {
	xxx_messageInfo_Done.DiscardUnknown(m)
}

var xxx_messageInfo_Done proto.InternalMessageInfo

type Complaint struct {
	IpfsDetail           []byte   `protobuf:"bytes,1,opt,name=ipfs_detail,json=ipfsDetail,proto3" json:"ipfs_detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Complaint) Reset()         { *m = Complaint{} }
func (m *Complaint) String() string { return proto.CompactTextString(m) }
func (*Complaint) ProtoMessage()    {}
func (*Complaint) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{16}
}

func (m *Complaint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Complaint.Unmarshal(m, b)
}
func (m *Complaint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Complaint.Marshal(b, m, deterministic)
}
func (m *Complaint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Complaint.Merge(m, src)
}
func (m *Complaint) XXX_Size() int {
	return xxx_messageInfo_Complaint.Size(m)
}
func (m *Complaint) XXX_DiscardUnknown() {
	xxx_messageInfo_Complaint.DiscardUnknown(m)
}

var xxx_messageInfo_Complaint proto.InternalMessageInfo

func (m *Complaint) GetIpfsDetail() []byte {
	if m != nil {
		return m.IpfsDetail
	}
	return nil
}

type Initial struct {
	PoBurn               *Bundle  `protobuf:"bytes,1,opt,name=po_burn,json=poBurn,proto3" json:"po_burn,omitempty"`
	Service              []byte   `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	OwnerAddr            []byte   `protobuf:"bytes,3,opt,name=owner_addr,json=ownerAddr,proto3" json:"owner_addr,omitempty"`
	OwnerAddrSign        []byte   `protobuf:"bytes,7,opt,name=owner_addr_sign,json=ownerAddrSign,proto3" json:"owner_addr_sign,omitempty"`
	IpfsDetail           []byte   `protobuf:"bytes,4,opt,name=ipfs_detail,json=ipfsDetail,proto3" json:"ipfs_detail,omitempty"`
	Verify1              []byte   `protobuf:"bytes,5,opt,name=verify1,proto3" json:"verify1,omitempty"`
	Verify2              []byte   `protobuf:"bytes,6,opt,name=verify2,proto3" json:"verify2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Initial) Reset()         { *m = Initial{} }
func (m *Initial) String() string { return proto.CompactTextString(m) }
func (*Initial) ProtoMessage()    {}
func (*Initial) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{17}
}

func (m *Initial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Initial.Unmarshal(m, b)
}
func (m *Initial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Initial.Marshal(b, m, deterministic)
}
func (m *Initial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Initial.Merge(m, src)
}
func (m *Initial) XXX_Size() int {
	return xxx_messageInfo_Initial.Size(m)
}
func (m *Initial) XXX_DiscardUnknown() {
	xxx_messageInfo_Initial.DiscardUnknown(m)
}

var xxx_messageInfo_Initial proto.InternalMessageInfo

func (m *Initial) GetPoBurn() *Bundle {
	if m != nil {
		return m.PoBurn
	}
	return nil
}

func (m *Initial) GetService() []byte {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Initial) GetOwnerAddr() []byte {
	if m != nil {
		return m.OwnerAddr
	}
	return nil
}

func (m *Initial) GetOwnerAddrSign() []byte {
	if m != nil {
		return m.OwnerAddrSign
	}
	return nil
}

func (m *Initial) GetIpfsDetail() []byte {
	if m != nil {
		return m.IpfsDetail
	}
	return nil
}

func (m *Initial) GetVerify1() []byte {
	if m != nil {
		return m.Verify1
	}
	return nil
}

func (m *Initial) GetVerify2() []byte {
	if m != nil {
		return m.Verify2
	}
	return nil
}

type SanityCheck struct {
	Verify1              []byte   `protobuf:"bytes,4,opt,name=verify1,proto3" json:"verify1,omitempty"`
	Verify2              []byte   `protobuf:"bytes,5,opt,name=verify2,proto3" json:"verify2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SanityCheck) Reset()         { *m = SanityCheck{} }
func (m *SanityCheck) String() string { return proto.CompactTextString(m) }
func (*SanityCheck) ProtoMessage()    {}
func (*SanityCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_3fc5e78786d5f342, []int{18}
}

func (m *SanityCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SanityCheck.Unmarshal(m, b)
}
func (m *SanityCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SanityCheck.Marshal(b, m, deterministic)
}
func (m *SanityCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SanityCheck.Merge(m, src)
}
func (m *SanityCheck) XXX_Size() int {
	return xxx_messageInfo_SanityCheck.Size(m)
}
func (m *SanityCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_SanityCheck.DiscardUnknown(m)
}

var xxx_messageInfo_SanityCheck proto.InternalMessageInfo

func (m *SanityCheck) GetVerify1() []byte {
	if m != nil {
		return m.Verify1
	}
	return nil
}

func (m *SanityCheck) GetVerify2() []byte {
	if m != nil {
		return m.Verify2
	}
	return nil
}

func init() {
	proto.RegisterEnum("msg.PacketType", PacketType_name, PacketType_value)
	proto.RegisterEnum("msg.BundleType", BundleType_name, BundleType_value)
	proto.RegisterEnum("msg.RepType", RepType_name, RepType_value)
	proto.RegisterType((*Packet)(nil), "msg.packet")
	proto.RegisterType((*Block)(nil), "msg.block")
	proto.RegisterType((*HashArray)(nil), "msg.HashArray")
	proto.RegisterType((*Bundle)(nil), "msg.bundle")
	proto.RegisterType((*Tx)(nil), "msg.tx")
	proto.RegisterType((*WeakReq)(nil), "msg.weak_req")
	proto.RegisterType((*Rep)(nil), "msg.rep")
	proto.RegisterType((*Review)(nil), "msg.review")
	proto.RegisterType((*POPR)(nil), "msg.p_o_p_r")
	proto.RegisterType((*Cert)(nil), "msg.cert")
	proto.RegisterType((*POPRA)(nil), "msg.p_o_p_r_a")
	proto.RegisterType((*Mediator)(nil), "msg.mediator")
	proto.RegisterType((*Agree)(nil), "msg.agree")
	proto.RegisterType((*Revenge)(nil), "msg.revenge")
	proto.RegisterType((*Cancel)(nil), "msg.cancel")
	proto.RegisterType((*Done)(nil), "msg.done")
	proto.RegisterType((*Complaint)(nil), "msg.complaint")
	proto.RegisterType((*Initial)(nil), "msg.initial")
	proto.RegisterType((*SanityCheck)(nil), "msg.sanity_check")
}

func init() { proto.RegisterFile("Messages/Messages.proto", fileDescriptor_3fc5e78786d5f342) }

var fileDescriptor_3fc5e78786d5f342 = []byte{
	// 1484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x16, 0xf5, 0x4b, 0x8d, 0x7e, 0xcc, 0x2c, 0x0c, 0x44, 0x4d, 0xd1, 0xd8, 0x60, 0x8a, 0x56,
	0xc8, 0x8f, 0x92, 0x28, 0x05, 0xda, 0x63, 0x65, 0x9b, 0x89, 0x8c, 0xd8, 0x92, 0xb3, 0x51, 0x12,
	0xf4, 0x52, 0x81, 0x92, 0x56, 0x0a, 0x11, 0x89, 0x64, 0x96, 0x94, 0x6d, 0xdd, 0x7a, 0xef, 0xbb,
	0xf4, 0xd2, 0x07, 0xe8, 0xb9, 0x0f, 0xd2, 0xf7, 0x28, 0x66, 0x76, 0x49, 0xd1, 0x8e, 0xdb, 0x00,
	0x39, 0x71, 0x76, 0xe6, 0x9b, 0xdd, 0xd9, 0xdd, 0xf9, 0x3e, 0x2e, 0xdc, 0x3e, 0x15, 0x51, 0xe4,
	0x2e, 0x44, 0xf4, 0x38, 0x31, 0x3a, 0xa1, 0x0c, 0xe2, 0x80, 0x15, 0x56, 0xd1, 0xe2, 0xce, 0xde,
	0x22, 0x08, 0x16, 0x4b, 0xf1, 0x98, 0x5c, 0x93, 0xf5, 0xfc, 0x71, 0xec, 0xad, 0x44, 0x14, 0xbb,
	0xab, 0x50, 0xa1, 0xec, 0xbf, 0x4a, 0x50, 0x0e, 0xdd, 0xe9, 0x07, 0x11, 0xb3, 0xa7, 0x50, 0x53,
	0xd6, 0x38, 0xde, 0x84, 0xa2, 0x65, 0xec, 0x1b, 0xed, 0x66, 0xd7, 0xea, 0xac, 0xa2, 0x45, 0x47,
	0xf9, 0x3b, 0xe8, 0xe7, 0xa0, 0x06, 0xa3, 0x4d, 0x28, 0xd8, 0x4f, 0x50, 0x4d, 0x27, 0x6c, 0xe5,
	0xf7, 0x8d, 0x76, 0xad, 0x7b, 0xa7, 0xa3, 0x96, 0xec, 0x24, 0x4b, 0x76, 0x46, 0x09, 0x82, 0x6f,
	0xc1, 0x8c, 0x41, 0x31, 0x94, 0xe2, 0xbc, 0x55, 0xd8, 0x37, 0xda, 0x75, 0x4e, 0x36, 0xdb, 0x85,
	0x92, 0x1f, 0xf8, 0x53, 0xd1, 0x2a, 0x92, 0x53, 0x0d, 0x10, 0x39, 0xf3, 0xe6, 0xf3, 0x56, 0x69,
	0xdf, 0x68, 0x37, 0x38, 0xd9, 0xe8, 0x7b, 0xef, 0x46, 0xef, 0x5b, 0x65, 0x95, 0x8d, 0x36, 0x7b,
	0x02, 0xbb, 0xd3, 0xb5, 0x94, 0xc2, 0x8f, 0xc7, 0x93, 0x65, 0x30, 0xfd, 0x30, 0xf6, 0xd7, 0xab,
	0x89, 0x90, 0xad, 0xca, 0xbe, 0xd1, 0x2e, 0x72, 0xa6, 0x63, 0x07, 0x18, 0x1a, 0x50, 0x04, 0x67,
	0x71, 0x67, 0x33, 0xd9, 0x6a, 0xa8, 0x59, 0xd0, 0x46, 0x5f, 0xe4, 0x2d, 0xfc, 0x56, 0x53, 0xf9,
	0xd0, 0x66, 0x0f, 0x81, 0x5d, 0x9d, 0x99, 0xd6, 0xde, 0x21, 0x84, 0x95, 0x9d, 0xb7, 0x8f, 0x75,
	0xdc, 0x87, 0x2a, 0xa1, 0x8e, 0xdc, 0xd8, 0x6d, 0x99, 0x74, 0x26, 0x40, 0x87, 0x48, 0xde, 0x7e,
	0x8e, 0x6f, 0xc3, 0xec, 0x11, 0xc0, 0x64, 0xed, 0xcf, 0x96, 0x82, 0xc0, 0x55, 0x02, 0xd7, 0x14,
	0x98, 0xdc, 0xfd, 0x1c, 0xcf, 0x00, 0xd8, 0xb7, 0x50, 0x91, 0x22, 0x24, 0x2c, 0x10, 0xd6, 0x24,
	0xac, 0x14, 0x61, 0x3f, 0xc7, 0x93, 0x10, 0x7b, 0x00, 0xe6, 0x85, 0x70, 0xd5, 0xfa, 0x35, 0x82,
	0x35, 0x08, 0x86, 0xce, 0xb1, 0x14, 0x1f, 0xfb, 0x39, 0x9e, 0x02, 0xd8, 0x33, 0x80, 0xc8, 0xf5,
	0xbd, 0x78, 0x43, 0xf0, 0x3a, 0xc1, 0x6f, 0x11, 0x5c, 0xb9, 0xc7, 0xd3, 0xf7, 0x82, 0xaa, 0xce,
	0xc0, 0xd8, 0x13, 0xa8, 0x79, 0xbe, 0x17, 0x7b, 0xee, 0x92, 0xb2, 0x2c, 0xca, 0xaa, 0x53, 0x96,
	0xf6, 0xf7, 0x73, 0x3c, 0x0b, 0xb1, 0x5f, 0x41, 0x11, 0x9b, 0x87, 0x01, 0x94, 0x0f, 0xde, 0x0c,
	0x8e, 0x4e, 0x1c, 0x2b, 0xc7, 0xaa, 0x50, 0x3a, 0x38, 0x19, 0x1e, 0xbe, 0xb4, 0x0c, 0x56, 0x81,
	0x02, 0x77, 0xce, 0xac, 0x3c, 0xab, 0x41, 0xe5, 0x9d, 0xd3, 0x7b, 0xc9, 0x9d, 0x57, 0x56, 0x81,
	0xed, 0x40, 0xed, 0x75, 0x6f, 0x70, 0x3c, 0xfa, 0xe5, 0xb0, 0xef, 0x1c, 0xbe, 0xb4, 0x8a, 0x18,
	0x3d, 0x1e, 0x1c, 0x8f, 0x8e, 0x7b, 0x27, 0x56, 0xe9, 0xa0, 0x0c, 0xc5, 0x19, 0x4e, 0xfd, 0x87,
	0x01, 0x25, 0x3a, 0x51, 0xb6, 0x07, 0x45, 0x29, 0x3e, 0x46, 0x2d, 0x63, 0xbf, 0x90, 0x9e, 0xa3,
	0x6a, 0x56, 0x4e, 0x01, 0xac, 0x5b, 0x8d, 0xf1, 0xa2, 0xa2, 0x56, 0x9e, 0x70, 0x4d, 0xc2, 0xa1,
	0xa7, 0x27, 0xa5, 0xbb, 0xe1, 0x59, 0x08, 0x7b, 0x04, 0x26, 0xed, 0xdb, 0x13, 0x51, 0xab, 0x40,
	0xf0, 0x4f, 0x0f, 0x87, 0xa7, 0x10, 0x76, 0x0f, 0xcc, 0x69, 0xe0, 0xf9, 0x13, 0x37, 0x52, 0x4d,
	0x5c, 0xeb, 0x56, 0x08, 0x1e, 0x5f, 0xf2, 0x34, 0x60, 0xef, 0x41, 0x35, 0x5d, 0x2d, 0xed, 0x64,
	0x63, 0xdb, 0xc9, 0xf6, 0x6f, 0x79, 0x28, 0xab, 0x5b, 0x47, 0x4e, 0x2a, 0xeb, 0x53, 0x4e, 0x2a,
	0xbf, 0xe6, 0xa4, 0x1a, 0x10, 0x27, 0x93, 0x19, 0xf3, 0x19, 0x6e, 0x3c, 0x80, 0x7a, 0x2c, 0x5d,
	0x3f, 0x72, 0xa7, 0xb1, 0x17, 0xf8, 0xc9, 0x56, 0xd2, 0xda, 0xae, 0x04, 0x59, 0x0b, 0x2a, 0xe7,
	0x42, 0x7a, 0xf3, 0xcd, 0x53, 0x4d, 0xc4, 0x64, 0xb8, 0x8d, 0x74, 0x89, 0x8d, 0x69, 0xa4, 0xbb,
	0x8d, 0x3c, 0xd3, 0x9c, 0x4c, 0x86, 0x5b, 0x52, 0x57, 0x32, 0xa4, 0xb6, 0xef, 0xea, 0x7e, 0xa8,
	0x83, 0x79, 0x36, 0x7c, 0xe7, 0xf0, 0xe7, 0x6f, 0x4e, 0xac, 0x1c, 0x33, 0xa1, 0x88, 0xb7, 0x6f,
	0x19, 0xf6, 0xef, 0x06, 0xe4, 0xe3, 0xcb, 0x9b, 0x4e, 0x87, 0xed, 0xa5, 0x47, 0x92, 0x91, 0x00,
	0x7d, 0x00, 0x44, 0xc0, 0x5d, 0x28, 0x49, 0x31, 0x1f, 0x5d, 0xea, 0x13, 0x50, 0x83, 0x94, 0xd8,
	0x85, 0x0c, 0xb1, 0x77, 0xa1, 0x74, 0xee, 0x2e, 0xd7, 0xea, 0xae, 0x0a, 0x5c, 0x0d, 0x98, 0x05,
	0x85, 0xd8, 0x5d, 0xe8, 0x1d, 0xa2, 0x69, 0x5f, 0x28, 0x46, 0x21, 0x79, 0x6e, 0x2c, 0xe9, 0x2b,
	0x30, 0xe3, 0x20, 0x76, 0x97, 0xe3, 0x58, 0x2d, 0xda, 0xe0, 0x15, 0x1a, 0x8f, 0x2e, 0xd9, 0xd7,
	0x50, 0x55, 0xa1, 0xb9, 0x10, 0xb4, 0x76, 0x83, 0x2b, 0xec, 0x73, 0x21, 0xb0, 0x61, 0x27, 0x6b,
	0xe9, 0xeb, 0x56, 0xc9, 0x12, 0x9f, 0x53, 0xc0, 0xfe, 0xb3, 0x0c, 0x05, 0x29, 0x42, 0xd6, 0x06,
	0x53, 0x8a, 0x50, 0xf5, 0x40, 0x99, 0x7a, 0xa0, 0x91, 0x30, 0x5f, 0x35, 0x00, 0x92, 0xff, 0xca,
	0xed, 0x67, 0xcb, 0x4b, 0x74, 0x2e, 0x9f, 0xd1, 0xb9, 0x0e, 0xd4, 0xc3, 0x71, 0x30, 0x0e, 0xc7,
	0x72, 0x8c, 0x2c, 0xa2, 0xd2, 0x12, 0x0e, 0xeb, 0x00, 0xea, 0x44, 0x38, 0x3c, 0xe3, 0x5a, 0x27,
	0x9a, 0x09, 0xde, 0x55, 0x19, 0x4a, 0xad, 0x9a, 0xd9, 0x8c, 0xb1, 0x8b, 0xf2, 0x86, 0x39, 0x3d,
	0x4a, 0xea, 0x40, 0x4d, 0x8a, 0x73, 0x4f, 0x5c, 0xa8, 0x0c, 0xc8, 0x6c, 0x53, 0xf9, 0x51, 0x57,
	0x94, 0x45, 0xf8, 0x1f, 0xa0, 0xb1, 0x12, 0x33, 0xcf, 0x8d, 0x03, 0x5d, 0x55, 0x56, 0xbe, 0x92,
	0x48, 0x3f, 0xc7, 0xeb, 0x89, 0xad, 0xf5, 0x0e, 0xdc, 0x85, 0x14, 0x42, 0xa5, 0xd4, 0x33, 0x8a,
	0x4b, 0x6e, 0x2c, 0x89, 0x0c, 0x02, 0x3f, 0x85, 0xba, 0x14, 0xe7, 0xc2, 0x5f, 0x68, 0x78, 0x23,
	0xb3, 0x6f, 0x1d, 0x40, 0xed, 0xd2, 0x66, 0xb2, 0x8b, 0xa9, 0xeb, 0x4f, 0xc5, 0x52, 0x65, 0xec,
	0x64, 0x76, 0xa1, 0xfc, 0xb8, 0x0b, 0x65, 0x11, 0xfe, 0x47, 0x68, 0x4e, 0x83, 0x55, 0xb8, 0x74,
	0x3d, 0x3f, 0x56, 0x29, 0x56, 0xe6, 0xa8, 0xd2, 0x50, 0x3f, 0xc7, 0x1b, 0xe9, 0x80, 0x12, 0xdb,
	0x50, 0x9d, 0x05, 0xbe, 0x2e, 0xec, 0x16, 0xe5, 0x54, 0x29, 0x07, 0xbd, 0x78, 0x1b, 0xf8, 0x25,
	0xe4, 0x97, 0x50, 0xf4, 0x46, 0x22, 0x62, 0xb3, 0x4b, 0x31, 0xa7, 0xff, 0x54, 0x9d, 0xa3, 0xc9,
	0xba, 0x50, 0x16, 0x97, 0xa1, 0x27, 0x05, 0xfd, 0x03, 0xff, 0xff, 0x87, 0xae, 0x91, 0x09, 0x65,
	0xd8, 0x96, 0x32, 0x52, 0x13, 0xdc, 0x84, 0xe2, 0xd9, 0xf0, 0x8c, 0x2b, 0xb9, 0x47, 0xab, 0x67,
	0x19, 0xf8, 0x17, 0xe0, 0xce, 0xdb, 0x63, 0xe7, 0x9d, 0x95, 0x47, 0x05, 0x38, 0x75, 0x8e, 0x8e,
	0x7b, 0xa3, 0x21, 0xb7, 0x0a, 0x08, 0xea, 0xbd, 0xe0, 0x8e, 0xa3, 0xc4, 0x9e, 0x3b, 0x6f, 0x9d,
	0xc1, 0x0b, 0xc7, 0x2a, 0x61, 0xc6, 0x61, 0x6f, 0x70, 0xe8, 0x9c, 0x58, 0x65, 0xd6, 0x80, 0xea,
	0xe1, 0xf0, 0xf4, 0xec, 0xa4, 0x77, 0x3c, 0x18, 0x59, 0x15, 0x5c, 0xe1, 0x68, 0x38, 0x70, 0x2c,
	0x33, 0xfd, 0x23, 0xbc, 0x85, 0xb2, 0x6a, 0x2a, 0xec, 0x7c, 0xe9, 0xc6, 0x4a, 0x37, 0x1b, 0x9c,
	0x6c, 0xd4, 0x0f, 0x2f, 0x9c, 0x47, 0x63, 0x05, 0xd1, 0x7a, 0x00, 0xe8, 0xe2, 0x2a, 0xe9, 0x36,
	0x54, 0xe2, 0xcb, 0x31, 0x31, 0xa6, 0xb8, 0x5f, 0x68, 0xd7, 0x79, 0x39, 0xbe, 0xec, 0xcd, 0x66,
	0xd2, 0xfe, 0xdb, 0x80, 0x8a, 0xee, 0xf4, 0xad, 0x74, 0x18, 0xf4, 0xbc, 0xd0, 0xd2, 0x71, 0x07,
	0xcc, 0xa4, 0x35, 0x49, 0x63, 0xeb, 0x3c, 0x1d, 0xb3, 0x43, 0xd8, 0x49, 0x9b, 0x5b, 0x1f, 0x70,
	0xf1, 0xb3, 0x07, 0xdc, 0x4c, 0x52, 0x1c, 0x75, 0xd0, 0xdf, 0x43, 0x75, 0x2a, 0x64, 0xec, 0xcd,
	0x3d, 0x31, 0xa3, 0x0b, 0x4e, 0x5a, 0x04, 0xbd, 0x7c, 0x1b, 0x63, 0x77, 0x01, 0xa6, 0x81, 0x3f,
	0xf7, 0x66, 0x02, 0xaf, 0xbc, 0x4c, 0xfb, 0xcf, 0x78, 0xec, 0x9f, 0xa1, 0x88, 0x60, 0xd4, 0x27,
	0xfc, 0xaa, 0xed, 0x2a, 0xd1, 0x30, 0xd1, 0x81, 0x1b, 0x4e, 0x83, 0x24, 0x9c, 0xf9, 0x6d, 0xf0,
	0xb5, 0xb7, 0xf0, 0x6d, 0x01, 0xd5, 0x94, 0xf6, 0x57, 0x36, 0x6e, 0x5c, 0xdb, 0xf8, 0x1e, 0xd4,
	0xfc, 0x00, 0xf5, 0x6f, 0x36, 0x71, 0xa7, 0x1f, 0x68, 0x1e, 0x93, 0x83, 0x1f, 0x3c, 0xd7, 0x1e,
	0x5c, 0x86, 0x9e, 0x55, 0x81, 0xbf, 0xdc, 0xd0, 0x7d, 0x98, 0xdc, 0x44, 0xc7, 0xd0, 0x5f, 0x6e,
	0xec, 0xb3, 0xed, 0xcc, 0xec, 0x1e, 0x5e, 0xec, 0x7c, 0xed, 0xcf, 0xa8, 0xd2, 0x6b, 0x8a, 0xa9,
	0x43, 0xe9, 0xfd, 0xce, 0x44, 0xec, 0x7a, 0x4b, 0x5d, 0x36, 0xdd, 0xef, 0x11, 0x79, 0xec, 0x21,
	0x94, 0x48, 0x0f, 0xae, 0x15, 0x6d, 0x5c, 0x29, 0xfa, 0x3e, 0x00, 0xd5, 0xb4, 0x0a, 0x7c, 0xb1,
	0xd1, 0x4f, 0xdb, 0x2b, 0xcb, 0x51, 0xc9, 0xa7, 0x18, 0xb5, 0x7f, 0xc5, 0x67, 0x19, 0xe9, 0x05,
	0xeb, 0x42, 0x33, 0x91, 0x17, 0x85, 0xbb, 0xa9, 0xd2, 0x86, 0x86, 0x1c, 0xa8, 0x7f, 0xfc, 0x67,
	0x0b, 0x36, 0xa1, 0xac, 0xe4, 0xc5, 0xc6, 0x0e, 0x0f, 0x7c, 0x61, 0x3f, 0x84, 0x6a, 0x2a, 0x1d,
	0xd7, 0xf3, 0x8d, 0x4f, 0xf2, 0xff, 0x31, 0xa0, 0xa2, 0x1f, 0x63, 0xf8, 0x84, 0x0c, 0x83, 0x31,
	0xfd, 0x75, 0x6e, 0x3a, 0xc3, 0x30, 0x38, 0x58, 0x4b, 0x1f, 0x55, 0x24, 0x12, 0xf2, 0xdc, 0x9b,
	0x0a, 0x5d, 0x4e, 0x32, 0x64, 0xdf, 0x00, 0x04, 0x17, 0xbe, 0x90, 0xaa, 0x61, 0x14, 0x79, 0xaa,
	0xe4, 0xa1, 0x8e, 0xf9, 0x0e, 0x76, 0xb6, 0x61, 0xd5, 0x37, 0x4a, 0x6e, 0x1a, 0x29, 0x06, 0x9b,
	0xe7, 0x7a, 0xcd, 0xc5, 0xeb, 0x35, 0x67, 0x15, 0xae, 0xf4, 0x9f, 0x0a, 0x77, 0xe5, 0xa9, 0xd1,
	0xb5, 0x0f, 0xa0, 0x9e, 0x7d, 0x97, 0x7d, 0x89, 0x4a, 0x4e, 0xca, 0x44, 0xc2, 0x67, 0xff, 0x06,
	0x00, 0x00, 0xff, 0xff, 0x3c, 0x09, 0x34, 0x1a, 0x57, 0x0d, 0x00, 0x00,
}
